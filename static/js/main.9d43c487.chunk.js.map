{"version":3,"sources":["Header.js","UserDetails.jsx","PersonalDetails.jsx","Confirmation.jsx","Success.jsx","MainForm.js","App.js","serviceWorker.js","index.js"],"names":["Header","style1","display","margin","marginBottom","style","to","UserDetails","saveAndContinue","e","preventDefault","props","nextStep","values","this","Form","className","Field","placeholder","onChange","handleChange","defaultValue","firstName","lastName","type","email","mobile","Button","onClick","Component","PersonalDetails","back","prevStep","color","age","address","pincode","city","country","Confirmation","addProductHandler","event","setState","isLoading","usersData","Stitch","defaultAppClient","getServiceClient","RemoteMongoClient","factory","db","collection","insertOne","then","result","console","log","catch","err","List","Item","Icon","name","Content","href","Success","state","redirect","id","setTimeout","clearTimeout","MainForm","step","input","target","value","App","isAuth","hasAppClient","client","initializeDefaultAppClient","auth","loginWithCredential","AnonymousCredential","Container","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","basename","history","createBrowserHistory","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9d43c487.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nconst Header =() =>{\r\n    const style1 ={\r\n     display:'inline-block',\r\n     margin:10,\r\n     marginBottom: 30 \r\n    };\r\nreturn(\r\n<div>\r\n<h4 style={style1}><Link to='/'>User Input Form</Link></h4>\r\n<h4 style={style1}><Link to='/jokes'>Jokes</Link></h4>\r\n<h4 style={style1}><Link to='/musicmaster'>Music Master</Link></h4>\r\n<h4 style={style1}><Link to='/weatherapp'>Weather App</Link></h4>\r\n</div>\r\n)\r\n}\r\nexport default Header;","// UserDetails.jsx\r\nimport React, { Component } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react';\r\n\r\nclass UserDetails extends Component{\r\n\r\n    saveAndContinue = (e) => {\r\n        e.preventDefault()\r\n        this.props.nextStep()\r\n    }\r\n\r\n    render(){\r\n        const { values } = this.props;\r\n        return(\r\n            <Form >\r\n                <h1 className=\"ui centered\">Enter User Details</h1>\r\n                <Form.Field>\r\n                    <label>First Name</label>\r\n                    <input\r\n                    placeholder='First Name'\r\n                    onChange={this.props.handleChange('firstName')}\r\n                    defaultValue={values.firstName}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Last Name</label>\r\n                    <input\r\n                    placeholder='Last Name'\r\n                    onChange={this.props.handleChange('lastName')}\r\n                    defaultValue={values.lastName}\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Form.Field>\r\n                    <label>Email Address</label>\r\n                    <input\r\n                    type='email'\r\n                    placeholder='Email Address'\r\n                    onChange={this.props.handleChange('email')}\r\n                    defaultValue={values.email}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Mobile No.</label>\r\n                    <input\r\n                    placeholder='Mobile No.'\r\n                    onChange={this.props.handleChange('mobile')}\r\n                    defaultValue={values.mobile}\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Button onClick={this.saveAndContinue}>Save And Continue </Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserDetails;","// PersonalDetails.jsx\r\nimport React, { Component } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { throws } from 'assert';\r\n\r\nclass PersonalDetails extends Component{\r\n    saveAndContinue = (e) => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back  = (e) => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render(){\r\n        const { values } = this.props\r\n        return(\r\n        <Form color='blue' >\r\n            <h1 className=\"ui centered\">Enter Personal Details</h1>\r\n            <Form.Field>\r\n                <label>Age</label>\r\n                <input placeholder='Age'\r\n                onChange={this.props.handleChange('age')}\r\n                defaultValue={values.age}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Address</label>\r\n                <input placeholder='Address of your location'\r\n                onChange={this.props.handleChange('address')}\r\n                defaultValue={values.address}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Pincode</label>\r\n                <input placeholder='Pincode of your location'\r\n                onChange={this.props.handleChange('pincode')}\r\n                defaultValue={values.pincode}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>City</label>\r\n                <input placeholder='City'\r\n                onChange={this.props.handleChange('city')}\r\n                defaultValue={values.city}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Country</label>\r\n                <input placeholder='Country'\r\n                onChange={this.props.handleChange('country')}\r\n                defaultValue={values.country}\r\n                />\r\n            </Form.Field>\r\n            <Button onClick={this.back}>Back</Button>\r\n            <Button onClick={this.saveAndContinue}>Save And Continue </Button>\r\n        </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonalDetails;","// Confirmation.jsx\r\nimport React, { Component } from 'react';\r\nimport { Button, List } from 'semantic-ui-react';\r\nimport { Stitch,RemoteMongoClient } from 'mongodb-stitch-browser-sdk';\r\n\r\nclass Confirmation extends Component{\r\n\r\n    back  = (e) => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n    addProductHandler = event => {\r\n        event.preventDefault();\r\n        \r\n        this.setState({ isLoading: true });\r\n        const usersData = {\r\n          firstName: this.props.values.firstName,\r\n          lastName: this.props.values.lastName,\r\n          email:this.props.values.email,\r\n          mobile:this.props.values.mobile,\r\n          age: this.props.values.age,\r\n          address:this.props.values.address,\r\n          pincode:this.props.values.pincode,\r\n          city:this.props.values.city,\r\n          country:this.props.values.country\r\n        };\r\n        let request;\r\n        const mongodb = Stitch.defaultAppClient.getServiceClient(RemoteMongoClient.factory,'mongodb-atlas');\r\n        request = mongodb.db('users').collection('usersData').insertOne(usersData);\r\n        request\r\n        .then(result => {\r\n          console.log(result)\r\n          this.setState({ isLoading: false });\r\n          this.props.nextStep();\r\n        })\r\n        .catch(err => {\r\n          this.setState({ isLoading: false });\r\n          console.log(err);\r\n        });\r\n    };\r\n    render(){\r\n        const {values: { firstName, lastName, email, mobile, age, address, pincode,  city, country }} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <h1 className=\"ui centered\">Confirm your Details</h1>\r\n                <p>Click Confirm if the following details have been correctly entered</p>\r\n                <List>\r\n                    <List.Item>\r\n                        <List.Icon name='users' />\r\n                        <List.Content>First Name: {firstName}</List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Icon name='users' />\r\n                        <List.Content>Last Name: {lastName}</List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Icon name='mail' />\r\n                        <List.Content>\r\n                            <a href='mailto:ashishkmsingh98@gmail.com'>{email}</a>\r\n                        </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Icon name='phone square' />\r\n                        <List.Content>Mobile: {mobile}</List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Icon name='calendar' />\r\n                        <List.Content>{age} Years</List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Icon name='address book' />\r\n                        <List.Content>Address: {address}</List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Icon name='map pin' />\r\n                        <List.Content>Pincode: {pincode}</List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Icon name='marker' />\r\n                        <List.Content>{city}, {country}</List.Content>\r\n                    </List.Item>\r\n                </List>\r\n\r\n                <Button onClick={this.back}>Back</Button>\r\n                <Button onClick={this.addProductHandler}>Confirm</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Confirmation;","// Success.jsx\r\nimport React, { Component } from 'react';\r\n\r\nclass Success extends Component{\r\n    state = {\r\n        redirect: false\r\n      }\r\n      componentDidMount() {\r\n        this.id = setTimeout(() => this.setState({ redirect: true }), 1000)\r\n      }\r\n      componentWillUnmount() {\r\n        clearTimeout(this.id)\r\n      }\r\n\r\n    render(){\r\n        return <div><h1 className=\"ui centered\">Details Successfully Saved</h1></div>\r\n    }\r\n}\r\n\r\nexport default Success;","// MainForm.jsx\r\nimport React, { Component } from 'react';\r\nimport UserDetails from './UserDetails';\r\nimport PersonalDetails from './PersonalDetails';\r\nimport Confirmation from './Confirmation';\r\nimport Success from './Success';\r\nclass MainForm extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        step: 1,\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        mobile:'',\r\n        age: '',\r\n        address:'',\r\n        pincode:'',\r\n        city: '',\r\n        country: ''\r\n    }\r\n    \r\n    nextStep = () => {\r\n        const { step } = this.state\r\n        this.setState({\r\n            step : step + 1\r\n        })\r\n    }\r\n\r\n    prevStep = () => {\r\n        const { step } = this.state\r\n        this.setState({\r\n            step : step - 1\r\n        })\r\n    }\r\n\r\n    handleChange = input => event => {\r\n        this.setState({ [input] : event.target.value })\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {step} = this.state;\r\n        const { firstName, lastName, email, mobile, age, address, pincode, city, country } = this.state;\r\n        const values = { firstName, lastName, email, mobile, age, address, pincode, city, country };\r\n        switch(step) {\r\n        case 1:\r\n            return <UserDetails\r\n                    nextStep={this.nextStep}\r\n                    handleChange = {this.handleChange}\r\n                    values={values}\r\n                    />\r\n        case 2:\r\n            return <PersonalDetails\r\n                    nextStep={this.nextStep}\r\n                    prevStep={this.prevStep}\r\n                    handleChange = {this.handleChange}\r\n                    values={values}\r\n                    />\r\n        case 3:\r\n            return <Confirmation\r\n                    nextStep={this.nextStep}\r\n                    prevStep={this.prevStep}\r\n                    values={values}\r\n                    />\r\n        case 4:\r\n            return <Success />\r\n        }\r\n    }\r\n}\r\n\r\nexport default MainForm;","// app.js\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header'\nimport MainForm from './MainForm';\nimport { Container } from 'semantic-ui-react';\nimport { Stitch,AnonymousCredential,RemoteMongoClient} from 'mongodb-stitch-browser-sdk';\nclass App extends Component {\n  state = {\n    isAuth: true\n  };\n  constructor() {\n    super();\n    if (!Stitch.hasAppClient('myshop-webnd')) {\n        this.client = Stitch.initializeDefaultAppClient('myshop-webnd');\n        this.client.auth.loginWithCredential(new AnonymousCredential());\n    } else {\n        this.client = Stitch.defaultAppClient;\n    }\n\n    this.db = this.client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db('users');\n}\n  render() {\n    return(\n     \n      <Container textAlign='center'>\n         <Header/>\n        <MainForm />\n      </Container>     )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Switch,Route,BrowserRouter as Router,Link,NavLink} from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(\n  <Router basename='/multistep-form/' history={createBrowserHistory()}>\n      <Switch>\n          <Route exact path ='/' component={App} />\n          \n          \n      </Switch>\n  </Router>\n  , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}